#
1. git init //初始化仓库
2. git add .(文件name) //添加文件到本地仓库
3. git commit -m “first commit” //添加文件描述信息
4. git remote add origin + 远程仓库地址 //链接远程仓库，创建主分支
5. git pull origin main // 把本地仓库的变化连接到远程仓库主分支
6. git push -u origin main //把本地仓库的文件推送到远程仓库

#
git status
git log

#配置用户名和邮箱
git config --global user.name 'XXX'
git config --global user.email 'XXX'
git config --global --list

#删除文件
git rm XXX.xxx
#修改、重命名、删除文件后需要
git add .
git commit -m XXX

#重命名文件
git mv 旧文件名 新文件名

#移动文件
git mv 文件名 文件夹名

#移动并重命名文件
git mv 旧文件名 文件夹名/新文件名

#查看文件改动
git log --pretty=oneline (路径/)文件夹名
git show 上命令查询出的ID

git log -p (路径/)文件夹名

git diff

#还原文件
git checkout -- (路径/)文件名

#撤销本地暂存
git reset HEAD (路径/)文件名

#整个项目回退到上一个版本
git reset --hard HEAD^
#整个项目回退到上两个版本，依次类推
git reset --hard HEAD^^

#整个项目回退到某个指定版本
git log 查找该版本的commit_id（也可只取前7，8位）
git reset --hard commit_id

#指定文件回退到指定版本
git checkout commit_id -- 文件名

#给最新版本添加标签
git tag XXX
#给指定commit添加标签
git tag XXX commit_id
#删除该标签
git tag -d XXX
#标签推送到远程仓库
git push origin XXX

#创建分支
git branch XXX
#查看分支
git branch
#切换至分支XXX
git checkout XXX
#删除分支，不能删除当前所在的分支
git branch -d XXX
#创建并切换至该分支
git checkout -b XXX
#强制删除分支，适用于已在该分支提交了内容但仍然要删除
git branch -D XXX
